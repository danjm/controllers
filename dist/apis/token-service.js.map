{"version":3,"file":"token-service.js","sourceRoot":"","sources":["../../src/apis/token-service.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,kCAAuC;AAEvC,MAAM,SAAS,GAAG,+CAA+C,CAAC;AAElE,SAAS,aAAa,CAAC,OAAe;IACpC,OAAO,GAAG,SAAS,SAAS,OAAO,EAAE,CAAC;AACxC,CAAC;AACD,SAAS,YAAY,CAAC,OAAe;IACnC,OAAO,GAAG,SAAS,WAAW,OAAO,EAAE,CAAC;AAC1C,CAAC;AACD,SAAS,mBAAmB,CAAC,OAAe,EAAE,YAAoB;IAChE,OAAO,GAAG,SAAS,WAAW,OAAO,YAAY,YAAY,EAAE,CAAC;AAClE,CAAC;AAED;;;;GAIG;AACH,SAAsB,cAAc,CAAC,OAAe;;QAClD,MAAM,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;QACvC,MAAM,YAAY,GAAgB;YAChC,QAAQ,EAAE,QAAQ;YAClB,cAAc,EAAE,4BAA4B;YAC5C,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,MAAM;SACb,CAAC;QACF,YAAY,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC;QAC5C,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC7D,MAAM,aAAa,GAAG,MAAM,mBAAY,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QACjE,OAAO,MAAM,aAAa,CAAC,IAAI,EAAE,CAAC;IACpC,CAAC;CAAA;AAZD,wCAYC;AAED;;;;GAIG;AACH,SAAsB,UAAU,CAAC,OAAe;;QAC9C,MAAM,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC;QACvC,MAAM,YAAY,GAAgB;YAChC,QAAQ,EAAE,OAAO;YACjB,cAAc,EAAE,4BAA4B;YAC5C,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,MAAM;SACb,CAAC;QACF,YAAY,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC;QAC5C,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC7D,MAAM,mBAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;IAC5C,CAAC;CAAA;AAXD,gCAWC;AAED;;;;GAIG;AACH,SAAsB,kBAAkB,CACtC,OAAe,EACf,YAAoB;;QAEpB,MAAM,gBAAgB,GAAG,mBAAmB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;QACpE,MAAM,YAAY,GAAgB;YAChC,QAAQ,EAAE,gBAAgB;YAC1B,cAAc,EAAE,4BAA4B;YAC5C,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,MAAM;SACb,CAAC;QACF,YAAY,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC;QAC5C,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC7D,MAAM,aAAa,GAAG,MAAM,mBAAY,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC;QACzE,OAAO,MAAM,aAAa,CAAC,IAAI,EAAE,CAAC;IACpC,CAAC;CAAA;AAfD,gDAeC","sourcesContent":["import { timeoutFetch } from '../util';\n\nconst END_POINT = 'https://token-api.airswap-prod.codefi.network';\n\nfunction syncTokensURL(chainId: string) {\n  return `${END_POINT}/sync/${chainId}`;\n}\nfunction getTokensURL(chainId: string) {\n  return `${END_POINT}/tokens/${chainId}`;\n}\nfunction getTokenMetadataURL(chainId: string, tokenAddress: string) {\n  return `${END_POINT}/tokens/${chainId}?address=${tokenAddress}`;\n}\n\n/**\n * Fetches the list of token metadata for a given network chainId\n *\n * @returns - Promise resolving token  List\n */\nexport async function fetchTokenList(chainId: string): Promise<Response> {\n  const tokenURL = getTokensURL(chainId);\n  const fetchOptions: RequestInit = {\n    referrer: tokenURL,\n    referrerPolicy: 'no-referrer-when-downgrade',\n    method: 'GET',\n    mode: 'cors',\n  };\n  fetchOptions.headers = new window.Headers();\n  fetchOptions.headers.set('Content-Type', 'application/json');\n  const tokenResponse = await timeoutFetch(tokenURL, fetchOptions);\n  return await tokenResponse.json();\n}\n\n/**\n * Forces a sync of token metadata for a given network chainId.\n * Syncing happens every 1 hour in the background, this api can\n * be used to force a sync from our side\n */\nexport async function syncTokens(chainId: string): Promise<void> {\n  const syncURL = syncTokensURL(chainId);\n  const fetchOptions: RequestInit = {\n    referrer: syncURL,\n    referrerPolicy: 'no-referrer-when-downgrade',\n    method: 'GET',\n    mode: 'cors',\n  };\n  fetchOptions.headers = new window.Headers();\n  fetchOptions.headers.set('Content-Type', 'application/json');\n  await timeoutFetch(syncURL, fetchOptions);\n}\n\n/**\n * Fetch metadata for the token address provided for a given network chainId\n *\n * @return Promise resolving token metadata for the tokenAddress provided\n */\nexport async function fetchTokenMetadata(\n  chainId: string,\n  tokenAddress: string,\n): Promise<Response> {\n  const tokenMetadataURL = getTokenMetadataURL(chainId, tokenAddress);\n  const fetchOptions: RequestInit = {\n    referrer: tokenMetadataURL,\n    referrerPolicy: 'no-referrer-when-downgrade',\n    method: 'GET',\n    mode: 'cors',\n  };\n  fetchOptions.headers = new window.Headers();\n  fetchOptions.headers.set('Content-Type', 'application/json');\n  const tokenResponse = await timeoutFetch(tokenMetadataURL, fetchOptions);\n  return await tokenResponse.json();\n}\n"]}